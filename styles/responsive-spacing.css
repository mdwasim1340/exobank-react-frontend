/* 
 * Responsive Vertical Spacing System
 * 
 * This CSS implements fluid vertical spacing that scales smoothly between breakpoints
 * using clamp() functions and CSS custom properties for maintainability.
 */

:root {
  /* Base spacing values */
  --spacing-min: 1rem;        /* 16px - minimum for mobile */
  --spacing-max: 2rem;        /* 32px - maximum for desktop */
  --spacing-fluid: 2.5vw;     /* Viewport-based scaling factor */
  
  /* Calculated fluid spacing using clamp() */
  --spacing-section: clamp(var(--spacing-min), var(--spacing-fluid), var(--spacing-max));
  --spacing-content: clamp(0.75rem, 1.5vw, 1.5rem);
  --spacing-text: clamp(0.5rem, 1vw, 1rem);
  
  /* Responsive multipliers for different spacing needs */
  --spacing-xs: calc(var(--spacing-section) * 0.25);  /* 4px-8px */
  --spacing-sm: calc(var(--spacing-section) * 0.5);   /* 8px-16px */
  --spacing-md: var(--spacing-section);               /* 16px-32px */
  --spacing-lg: calc(var(--spacing-section) * 1.5);   /* 24px-48px */
  --spacing-xl: calc(var(--spacing-section) * 2);     /* 32px-64px */
  
  /* Container edge spacing - ensures minimum 1rem from edges */
  --container-padding: clamp(1rem, 4vw, 3rem);
  
  /* Line height scaling for readability */
  --line-height-tight: clamp(1.2, 1.3, 1.4);
  --line-height-normal: clamp(1.4, 1.5, 1.6);
  --line-height-loose: clamp(1.6, 1.7, 1.8);
}

/* 
 * Breakpoint-specific adjustments
 * Fine-tune spacing at key viewport sizes
 */

/* Mobile (320px-480px) */
@media (max-width: 480px) {
  :root {
    --spacing-fluid: 2vw;
    --container-padding: 1rem;
  }
}

/* Tablet (481px-768px) */
@media (min-width: 481px) and (max-width: 768px) {
  :root {
    --spacing-fluid: 2.2vw;
    --container-padding: clamp(1.5rem, 3vw, 2rem);
  }
}

/* Desktop (769px-1024px) */
@media (min-width: 769px) and (max-width: 1024px) {
  :root {
    --spacing-fluid: 2.3vw;
    --container-padding: clamp(2rem, 3.5vw, 2.5rem);
  }
}

/* Large Desktop (1025px-1440px) */
@media (min-width: 1025px) and (max-width: 1440px) {
  :root {
    --spacing-fluid: 2.4vw;
    --container-padding: clamp(2.5rem, 4vw, 3rem);
  }
}

/* Extra Large (1441px+) */
@media (min-width: 1441px) {
  :root {
    --spacing-fluid: 2rem; /* Cap at maximum */
    --container-padding: 3rem;
  }
}

/* 
 * Base layout structure
 * Applies consistent spacing throughout the application
 */

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding-left: var(--container-padding);
  padding-right: var(--container-padding);
}

/* 
 * Section spacing
 * Major content sections with consistent vertical rhythm
 */

.section {
  margin-bottom: var(--spacing-lg);
  padding-top: var(--spacing-md);
  padding-bottom: var(--spacing-md);
}

.section:first-child {
  padding-top: var(--spacing-sm);
}

.section:last-child {
  margin-bottom: 0;
  padding-bottom: var(--spacing-sm);
}

/* 
 * Content spacing
 * Spacing between content elements within sections
 */

.content-block {
  margin-bottom: var(--spacing-content);
}

.content-block:last-child {
  margin-bottom: 0;
}

/* 
 * Text spacing
 * Ensures proper spacing around text elements
 */

.text-content {
  margin-bottom: var(--spacing-text);
  line-height: var(--line-height-normal);
}

.text-content:last-child {
  margin-bottom: 0;
}

/* Headings with responsive spacing */
h1, h2, h3, h4, h5, h6 {
  margin-top: var(--spacing-lg);
  margin-bottom: var(--spacing-sm);
  line-height: var(--line-height-tight);
}

h1:first-child,
h2:first-child,
h3:first-child,
h4:first-child,
h5:first-child,
h6:first-child {
  margin-top: 0;
}

/* Paragraphs with optimal spacing */
p {
  margin-bottom: var(--spacing-text);
  line-height: var(--line-height-normal);
}

p:last-child {
  margin-bottom: 0;
}

/* Lists with proper spacing */
ul, ol {
  margin-bottom: var(--spacing-text);
  padding-left: var(--spacing-md);
}

li {
  margin-bottom: var(--spacing-xs);
  line-height: var(--line-height-normal);
}

li:last-child {
  margin-bottom: 0;
}

/* 
 * Card and component spacing
 * Consistent spacing for UI components
 */

.card {
  padding: var(--spacing-md);
  margin-bottom: var(--spacing-content);
  border-radius: clamp(0.5rem, 1vw, 1rem);
}

.card:last-child {
  margin-bottom: 0;
}

.card-header {
  margin-bottom: var(--spacing-sm);
}

.card-body {
  margin-bottom: var(--spacing-sm);
}

.card-footer {
  margin-top: var(--spacing-sm);
}

/* 
 * Form spacing
 * Consistent spacing for form elements
 */

.form-group {
  margin-bottom: var(--spacing-content);
}

.form-group:last-child {
  margin-bottom: 0;
}

.form-label {
  display: block;
  margin-bottom: var(--spacing-xs);
  line-height: var(--line-height-tight);
}

.form-input {
  width: 100%;
  padding: var(--spacing-sm);
  margin-bottom: var(--spacing-xs);
  line-height: var(--line-height-normal);
}

/* 
 * Button spacing
 * Consistent spacing for interactive elements
 */

.button {
  padding: var(--spacing-sm) var(--spacing-md);
  margin-bottom: var(--spacing-xs);
  line-height: var(--line-height-tight);
}

.button-group {
  display: flex;
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-content);
}

/* 
 * Navigation spacing
 * Proper spacing for navigation elements
 */

.nav {
  padding: var(--spacing-sm) 0;
  margin-bottom: var(--spacing-md);
}

.nav-item {
  padding: var(--spacing-xs) var(--spacing-sm);
  margin-right: var(--spacing-xs);
}

/* 
 * Grid system with responsive gaps
 * Maintains consistent spacing in grid layouts
 */

.grid {
  display: grid;
  gap: var(--spacing-content);
  margin-bottom: var(--spacing-lg);
}

.grid-2 {
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.grid-3 {
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.grid-4 {
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
}

/* 
 * Flexbox utilities with consistent spacing
 */

.flex {
  display: flex;
  gap: var(--spacing-sm);
}

.flex-column {
  flex-direction: column;
  gap: var(--spacing-content);
}

.flex-wrap {
  flex-wrap: wrap;
  gap: var(--spacing-sm);
}

/* 
 * Utility classes for manual spacing adjustments
 */

.mt-xs { margin-top: var(--spacing-xs); }
.mt-sm { margin-top: var(--spacing-sm); }
.mt-md { margin-top: var(--spacing-md); }
.mt-lg { margin-top: var(--spacing-lg); }
.mt-xl { margin-top: var(--spacing-xl); }

.mb-xs { margin-bottom: var(--spacing-xs); }
.mb-sm { margin-bottom: var(--spacing-sm); }
.mb-md { margin-bottom: var(--spacing-md); }
.mb-lg { margin-bottom: var(--spacing-lg); }
.mb-xl { margin-bottom: var(--spacing-xl); }

.pt-xs { padding-top: var(--spacing-xs); }
.pt-sm { padding-top: var(--spacing-sm); }
.pt-md { padding-top: var(--spacing-md); }
.pt-lg { padding-top: var(--spacing-lg); }
.pt-xl { padding-top: var(--spacing-xl); }

.pb-xs { padding-bottom: var(--spacing-xs); }
.pb-sm { padding-bottom: var(--spacing-sm); }
.pb-md { padding-bottom: var(--spacing-md); }
.pb-lg { padding-bottom: var(--spacing-lg); }
.pb-xl { padding-bottom: var(--spacing-xl); }

/* 
 * Accessibility improvements
 * Ensures proper spacing for screen readers and keyboard navigation
 */

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Focus states with proper spacing */
*:focus {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

/* 
 * Print styles
 * Optimized spacing for print media
 */

@media print {
  :root {
    --spacing-section: 0.75rem;
    --spacing-content: 0.5rem;
    --spacing-text: 0.25rem;
    --container-padding: 1rem;
  }
  
  .section {
    page-break-inside: avoid;
    margin-bottom: var(--spacing-md);
  }
}

/* 
 * Reduced motion preferences
 * Respects user's motion preferences while maintaining spacing
 */

@media (prefers-reduced-motion: reduce) {
  * {
    transition: none !important;
    animation: none !important;
  }
}

/* 
 * High contrast mode adjustments
 * Ensures spacing remains effective in high contrast mode
 */

@media (prefers-contrast: high) {
  .section {
    border-bottom: 1px solid currentColor;
    padding-bottom: calc(var(--spacing-md) - 1px);
  }
}

/* 
 * Dark mode spacing adjustments
 * Subtle spacing adjustments for dark themes
 */

@media (prefers-color-scheme: dark) {
  :root {
    /* Slightly increased spacing for better readability in dark mode */
    --line-height-normal: clamp(1.5, 1.6, 1.7);
  }
}

/* 
 * Example usage in HTML:
 * 
 * <div class="container">
 *   <section class="section">
 *     <h1>Main Heading</h1>
 *     <div class="content-block">
 *       <p class="text-content">This paragraph has optimal spacing.</p>
 *       <p class="text-content">Another paragraph with consistent spacing.</p>
 *     </div>
 *     
 *     <div class="grid grid-2">
 *       <div class="card">
 *         <div class="card-header">
 *           <h2>Card Title</h2>
 *         </div>
 *         <div class="card-body">
 *           <p>Card content with proper spacing.</p>
 *         </div>
 *       </div>
 *     </div>
 *   </section>
 * </div>
 */